PROGRAM (1, 1) "Program"
IDENTIFIER (1, 9) "example"
SEMICOLON (1, 16) ";"
IDENTIFIER (2, 1) "a"
IDENTIFIER (2, 3) "_a"
IDENTIFIER (2, 6) "_a_"
IDENTIFIER (2, 10) "a_"
IDENTIFIER (2, 13) "a1"
INTEGER (2, 16) "1"
IDENTIFIER (2, 17) "a"
BAD (2, 19) "aф"
BAD (2, 22) "фa"
BAD (2, 25) "a1ф"
BAD (2, 29) "ыфщ"
BAD (3, 1) "qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq"
BAD (4, 1) "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
DOT (5, 1) "."
INTEGER (5, 2) "123"
INTEGER (5, 6) "45"
DOT (5, 8) "."
INTEGER (5, 9) "25"
INTEGER (5, 12) "76"
DOT (5, 14) "."
INTEGER (5, 15) "25"
DOT (5, 17) "."
INTEGER (5, 18) "44"
INTEGER (5, 21) "21"
DOT (5, 23) "."
INTEGER (5, 24) "25"
DOT (5, 26) "."
INTEGER (5, 28) "99"
INTEGER (5, 31) "10"
DOT (5, 33) "."
FLOAT (5, 34) "22e-25"
DOT (5, 41) "."
INTEGER (5, 42) "26"
DOT (5, 44) "."
FLOAT (5, 45) "21e-85"
DOT (5, 52) "."
FLOAT (5, 53) "45e-32"
FLOAT (5, 60) "0e+25"
FLOAT (5, 66) "45e-21"
STRING (7, 1) "'gdgdfgdgыыыыыdgdf'"
VAR (8, 1) "var"
IDENTIFIER (9, 3) "x"
COLON (9, 4) ":"
IDENTIFIER (9, 6) "inTeger"
SEMICOLON (9, 13) ";"
IDENTIFIER (10, 3) "str"
COLON (10, 6) ":"
ARRAY (10, 8) "array"
LEFT_BRACKET (10, 13) "["
INTEGER (10, 14) "1"
DOT (10, 15) "."
DOT (10, 16) "."
INTEGER (10, 17) "10"
RIGHT_BRACKET (10, 19) "]"
OF (10, 21) "of"
IDENTIFIER (10, 24) "integer"
SEMICOLON (10, 31) ";"
BEGIN (11, 1) "begin"
LINE_COMMENT (12, 3) "// Initialize x :+"
IDENTIFIER (13, 3) "x"
ASSIGN (13, 5) ":="
INTEGER (13, 8) "110"
DOT (13, 11) "."
FLOAT (13, 12) "1e+89"
SEMICOLON (13, 17) ";"
IDENTIFIER (14, 3) "ch"
ASSIGN (14, 6) ":="
STRING (14, 9) "'abc'"
SEMICOLON (14, 14) ";"
BLOCK_COMMENT (15, 3) "{This is a 





block comment}"
IDENTIFIER (22, 3) "if1"
EQ (22, 7) "="
IDENTIFIER (22, 9) "var1"
PLUS (22, 14) "+"
MINUS (22, 15) "-"
IDENTIFIER (22, 17) "elseend"
IF (23, 3) "if"
LEFT_PAREN (23, 6) "("
IDENTIFIER (23, 7) "x"
NOT_EQ (23, 9) "<>"
INTEGER (23, 12) "0"
RIGHT_PAREN (23, 13) ")"
THEN (24, 3) "then"
IDENTIFIER (25, 5) "x"
EQ (25, 7) "="
INTEGER (25, 9) "42"
MINUS (25, 12) "-"
INTEGER (25, 14) "10"
ELSE (26, 3) "else"
IDENTIFIER (27, 5) "x"
EQ (27, 7) "="
INTEGER (27, 9) "22"
PLUS (27, 12) "+"
INTEGER (27, 14) "10"
IDENTIFIER (28, 3) "str"
LEFT_BRACKET (28, 6) "["
INTEGER (28, 7) "1"
RIGHT_BRACKET (28, 8) "]"
ASSIGN (28, 10) ":="
LEFT_PAREN (28, 13) "("
IDENTIFIER (28, 14) "x"
PLUS (28, 16) "+"
INTEGER (28, 18) "3"
DOT (28, 19) "."
INTEGER (28, 20) "14"
RIGHT_PAREN (28, 22) ")"
SEMICOLON (28, 23) ";"
END (29, 1) "end"
DOT (29, 4) "."
